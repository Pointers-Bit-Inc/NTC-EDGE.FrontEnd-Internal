version: 2.1

orbs:
  node: circleci/node@5.0.1

parameters:
  test_url:
    type: string
    default: "https://test-edge-application-processing-appsvc.azurewebsites.net"
  prod_url:
    type: string
    default: "https://prod-edge-application-processing-appsvc.azurewebsites.net"

executors:
  default:
    docker:
      - image: cimg/node:lts
    working_directory: ~/ntc-edge-internal

  js:
    docker:
      - image: cimg/node:lts
    working_directory: ~/ntc-edge-internal
    environment:
      YARN_CACHE_FOLDER: ~/yarn_cache_internal

  android:
    resource_class: xlarge
    docker:
      - image: dsokal/expo-turtle-android
    working_directory: ~/ntc-edge-internal
    environment:
      EXPO_SDK_VERSION: 43.0.2
      TURTLE_VERSION: 0.26.0
      PLATFORM: android
      YARN_CACHE_FOLDER: ~/yarn_cache_internal

  ios:
    macos:
      xcode: 12.5.0
    working_directory: ~/ntc-edge-internal
    environment:
      EXPO_SDK_VERSION: 43.0.2
      TURTLE_VERSION: 0.26.0
      PLATFORM: ios
      YARN_CACHE_FOLDER: /Users/distiller/yarn_cache_internal
      HOMEBREW_NO_AUTO_UPDATE: 1

commands:
  add_yarn_binaries_to_path:
    steps:
      - run:
          name: Add yarn binaries path to $PATH
          command: echo 'export PATH=~/.yarn/bin:$PATH' >> $BASH_ENV

  determine_turtle_cache_key_component:
    steps:
      - run:
          name: Determine Turtle cache key component
          command: echo $TURTLE_VERSION $PLATFORM > /tmp/turtle-version-platform

  restore_turtle_cache:
    steps:
      - restore_cache:
          keys:
          - cache-turtle-cli-v1-{{ checksum "/tmp/turtle-version-platform" }}

  save_turtle_cache:
    steps:
      - save_cache:
          paths:
            - ~/.turtle
            - ~/yarn_cache_internal
          key: cache-turtle-cli-v1-{{ checksum "/tmp/turtle-version-platform" }}

  install_turtle_ios:
    steps:
      - run:
          name: Installing turtle-cli
          command: |
            yarn config set prefix ~/.yarn
            yarn global add turtle-cli@$TURTLE_VERSION

  setup_turtle:
    steps:
      - run:
          name: Setting up environment for Turtle
          command: turtle setup:$PLATFORM --sdk-version $EXPO_SDK_VERSION

  restore_yarn_cache:
    parameters:
      platform:
        type: string
    steps:
      - restore_cache:
          keys:
          - cache-yarn-internal-v1-<< parameters.platform >>-{{ checksum "package.json" }}

  save_yarn_cache:
    parameters:
      platform:
        type: string
    steps:
      - save_cache:
          paths:
            - ~/yarn_cache_internal
          key: cache-yarn-internal-v1-<< parameters.platform >>-{{ checksum "package.json" }}

jobs:
  Publish App:
    executor: js
    steps:
      - checkout
      - add_yarn_binaries_to_path
      - restore_yarn_cache:
          platform: linux
      - run:
          name: Installing expo-cli
          command: yarn global add expo-cli
      - run:
          name: Publishing Expo app
          command: |
            yarn
            expo publish
      - save_yarn_cache:
          platform: linux
  Build IOS Archive:
    executor: ios
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting IOS Archive
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: darwin
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: darwin
      - add_yarn_binaries_to_path
      - determine_turtle_cache_key_component
      - restore_turtle_cache
      - install_turtle_ios
      - setup_turtle
      - save_turtle_cache
      - run:
          name: Building Expo standalone app
          command: |
            echo $EXPO_IOS_DIST_P12_BASE64 > expo-project_dist.p12.base64
            base64 --decode expo-project_dist.p12.base64 > expo-project_dist.p12
            echo $EXPO_IOS_PROVISIONING_PROFILE_BASE64 > expo-project.mobileprovision.base64
            base64 --decode expo-project.mobileprovision.base64 > expo-project.mobileprovision
            turtle build:ios \
              --team-id $EXPO_APPLE_TEAM_ID \
              --dist-p12-path ./expo-project_dist.p12 \
              --provisioning-profile-path ./expo-project.mobileprovision \
              -o ~/ntc-edge-internal.ipa
      - store_artifacts:
          path: ~/ntc-edge-internal.ipa

  Build Android APK:
    executor: android
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android APK Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - determine_turtle_cache_key_component
      - restore_turtle_cache
      - run:
          name: Installing gulp-cli & turtle-cli
          command: yarn global add gulp-cli turtle-cli@$TURTLE_VERSION
      - setup_turtle
      - save_turtle_cache
      - run:
          name: Building Expo standalone app
          command: |
            echo $EXPO_ANDROID_KEYSTORE_BASE64 > expo-project.jks.base64
            base64 --decode expo-project.jks.base64 > expo-project.jks
            turtle build:android \
              --keystore-path ./expo-project.jks \
              --keystore-alias $EXPO_ANDROID_KEYSTORE_ALIAS \
              --type apk \
              -o ~/ntc-edge-internal.apk
      - store_artifacts:
          path: ~/ntc-edge-internal.apk

  Build Android AAB:
    executor: android
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android AAB Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - determine_turtle_cache_key_component
      - restore_turtle_cache
      - run:
          name: Installing gulp-cli & turtle-cli
          command: yarn global add gulp-cli turtle-cli@$TURTLE_VERSION
      - setup_turtle
      - save_turtle_cache
      - run:
          name: Building Expo standalone app
          command: |
            echo $EXPO_ANDROID_KEYSTORE_BASE64 > expo-project.jks.base64
            base64 --decode expo-project.jks.base64 > expo-project.jks
            turtle build:android \
              --keystore-path ./expo-project.jks \
              --keystore-alias $EXPO_ANDROID_KEYSTORE_ALIAS \
              --type app-bundle \
              -o ~/ntc-edge-internal.aab
      - store_artifacts:
          path: ~/ntc-edge-internal.aab

  Build App:
    executor: js
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android APP Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - run:
          name: Android APK Build
          command: npx eas-cli build --platform android --profile preview --non-interactive
          no_output_timeout: 30m
      - run:
          name: Android AAB Build
          command: npx eas-cli build --platform android --non-interactive
          no_output_timeout: 30m
      - run:
          name: IOS Build
          command: npx eas-cli build --platform ios --non-interactive
          no_output_timeout: 30m

  Build APK Android:
    executor: js
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android APP Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - run:
          name: Android APK Build
          command: npx eas-cli build --platform android --profile preview --non-interactive
          no_output_timeout: 30m

  Build AAB Android:
    executor: js
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android APP Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - run:
          name: Android APK Build
          command: npx eas-cli build --platform android --non-interactive
          no_output_timeout: 30m

  Build IOS:
    executor: js
    parameters:
      api_url:
        type: string
    environment:
      API_URL: << parameters.api_url >>
    steps:
      - checkout
      - run:
          name: Starting Android APP Build
          command: |
            echo Building for ${API_URL}
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - run:
          name: Android APK Build
          command: npx eas-cli build --platform ios --non-interactive
          no_output_timeout: 30m

  Submit to Appstore:
    executor: default
    steps:
      - checkout
      - restore_yarn_cache:
          platform: linux
      - node/install:
          node-version: '16.13.0'
      - run: yarn
      - save_yarn_cache:
          platform: linux
      - add_yarn_binaries_to_path
      - run:
          name: Submit to Apple Appstore
          command: npx eas-cli submit -p ios --latest --non-interactive

workflows:
  Development Build and Deploy:
    jobs:
      - Build for Development:
          type: approval
          filters:
            branches:
              only:
                - develop
      - Publish App:
          requires:
            - Build for Development

      - Request Build APK:
          type: approval
          requires:
            - Publish App

      - Request Build AAB:
          type: approval
          requires:
            - Publish App

      - Request Build IOS:
          type: approval
          requires:
            - Publish App

      - Build APK Android:
          api_url: << pipeline.parameters.test_url >>
          context: ntc-edge
          requires:
            - Request Build APK

      - Build AAB Android:
          api_url: << pipeline.parameters.test_url >>
          context: ntc-edge
          requires:
            - Request Build AAB

      - Build IOS:
          api_url: << pipeline.parameters.test_url >>
          context: ntc-edge
          requires:
            - Request Build IOS

      - Ready for Submission:
          type: approval
          requires:
            - Build IOS

      - Submit to Appstore:
          context: ntc-edge
          requires:
            - Ready for Submission  

  Production Build and Deploy:
    jobs:
      - Build for Production:
          type: approval
          filters:
            branches:
              only:
                - master
      - Publish App:
          requires:
            - Build for Production

      - Request Build APK:
          type: approval
          requires:
            - Publish App

      - Request Build AAB:
          type: approval
          requires:
            - Publish App

      - Request Build IOS:
          type: approval
          requires:
            - Publish App

      - Build APK Android:
          api_url: << pipeline.parameters.prod_url >>
          context: ntc-edge
          requires:
            - Request Build APK

      - Build AAB Android:
          api_url: << pipeline.parameters.prod_url >>
          context: ntc-edge
          requires:
            - Request Build AAB

      - Build IOS:
          api_url: << pipeline.parameters.prod_url >>
          context: ntc-edge
          requires:
            - Request Build IOS

      - Ready for Submission:
          type: approval
          requires:
            - Build IOS

      - Submit to Appstore:
          context: ntc-edge
          requires:
            - Ready for Submission    
          